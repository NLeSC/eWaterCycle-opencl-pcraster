BCF package
^^^^^^^^^^^
The BCF package specifies the input for the block-centered flow package.

The operation for the specification of the conductivity values is

.. code-block:: c

   res = mf::setConductivity(LAYTYPE, hCond, vCond, LAYER);

where

LAYTYPE
   contains the combined code for the method of computing interblock conductance (left digit; 0 or blank: harmonic mean (Modflow-88), 1: arithmetic mean, 2: logarithmic mean, 3: arithmetic mean of saturated thickness and logarithmic mean hydraulic conductivity) and the layer type (LAYCON, right digit; 0: confined, 1: unconfined, 2: confined/unconfined (transmissivity constant), 3: confined/unconfined (transmissivity varies));

hCond
   is the name of a spatial, scalar PCRaster map containing the horizontal conductivity values;

vCond
   is the name of a spatial, scalar PCRaster map containing the vertical conductivity values and

LAYER
   is the layer number the map values will be assigned to.

Annotation: For calculations in Modflow only vertical hydraulic conductivity values for quasi-3D confining beds are used. Horizontal conductivity values must also be specified for those layer due to technical reasons.

Transient simulations
~~~~~~~~~~~~~~~~~~~~~
If the simulation state is set to transient the specification of the storage coefficients is required. The operation is

.. code-block:: c

   res = mf::setStorage(primaryStorage, secondaryStorage, LAYER);

where

primaryStorage
   is the name of a spatial, scalar PCRaster map containing the primary storage values;

secondaryStorage
   is the name of a spatial, scalar PCRaster map containing the secondary storage values and

LAYER
   is the layer number the map values will be assigned to.

Wetting capability
~~~~~~~~~~~~~~~~~~
To activate the wetting capability the following operations must be used. The non-spatial parameters are set with

.. code-block:: c

   res = mf::setWettingParameter(WETFCT, IWETIT, IHDWET);

where

WETFCT
   is the factor that is included in the calculation of the head that is initially established at a cell when that cell is converted from dry to wet;

IWETIT
   is the iteration interval for attempting to wet cells. Wetting is attempted every IWETIT iteration. This applies to outer iterations and not inner iterations. If IWETIT is 0, the value is changed to 1;

IHDWET
   flag that determines which equation is used to define the initial head at cells that become wet (0: :math:`h = BOT + WETFCT(h_n - BOT)`, 1: :math:`h = BOT + WETFCT(THRESH)`).

The wetting threshold and flag values are specified with

.. code-block:: c

   res = mf::setWetting(map, LAYER);

where

map
   is the name of a spatial, scalar PCRaster map and

LAYER
   is the layer number the map values will be assigned to.

Optional operations
~~~~~~~~~~~~~~~~~~~
The head value that is assigned to cells that are converted to dry during a simulation (HDRY) can be specified with

.. code-block:: c

   res = mf::setDryHead(VALUE);

where

VALUE
   is the scalar, non-spatial head value.

If this operation is not used the value will be set to a default value of -999.9.

The variable containing the horizontal anisotropy factor (TPRY) can be specified with

.. code-block:: c

   res = mf::setHorizontalAnisotropy(VALUE, LAYER);

where

VALUE
   is the scalar, non-spatial horizontal anisotropy value.

LAYER
   is the layer number the map values will be assigned to.

If this operation is not used for a specific layer the value will be set to a default value of 1.0 (isotropic conditions).
